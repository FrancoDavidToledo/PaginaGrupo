
@page "/Noticias/p/{paginado:int}"
@using Microsoft.AspNetCore.Components.Authorization
@using PaginaGrupo.Core.DTOs
@using PaginaGrupo.Core.QueryFilters
@using PaginaGrupo.WebApp.Servicios.Contrato
@inject IToastService toastService
@inject INoticiaServicio noticiaServicio
@inject NavigationManager _navServicio

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />

    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Grupo Scout San Patricio</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@300&display=swap" rel="stylesheet">

</head>
<body>

    <h1>Nuestras ultimas noticias</h1>
    

    @if (lista is null)
    {
   <div class="d-flex justify-content-center align-items-center loading">
      <div class="spinner-border" role="status">
        <span class="sr-only"></span>
      </div>
    </div>

   }else if (lista.Count == 0)
    {
        <h4 class="flex align-items-center">No se cargaron noticias...</h4>
    }else{

        @foreach (var item in lista)
        {
            if (!invert)
            {
                <a href="/Noticias/@item.Id" class="text-decoration-none">
                <div class="noticia text-black">
                    <div class="contenido">
                        <h2>@item.Titulo</h2>
                        <p>@item.Copete</p>
                    </div>
                    <picture>
                        <img src="@item.Adjunto" alt="@item.Titulo">
                    </picture>
                </div>

                <div style="display:none">@(invert = !invert)</div>
                </a>
            }
            else
            {
                <a href="/Noticias/@item.Id" class="text-decoration-none">
                <div class="noticia text-black">
                    <picture><img src="@item.Adjunto" alt="@item.Titulo"> </picture>
                    <div class="contenido">
                        <h2>@item.Titulo</h2>
                        <p>@item.Copete</p>
                    </div>
                </div>

                <div style="display:none">@(invert = !invert)</div>
                </a>
            }

        }

        <div class="paginado">
            <h2> <a href="/Noticias/p/@(paginado-1)">ткб</a> <b style="color:#0A592A">@(paginado+" ") </b> @for (int i = 1; i < 6; i++){@(paginado+i+" ")}... <a href="/Noticias/p/@(paginado+1)">ткв</a>  </h2>
        </div>
    }

</body>
</html>

@code{
    //getNoticia(id)
    [Parameter]
    public int paginado { get; set; }

    public bool invert = false;

    private List<NoticiaActivaImagenDto>? lista = null;


    [CascadingParameter]
    private Task<AuthenticationState> authencationState { get; set; }


    protected override async Task OnParametersSetAsync()
    {
        if (paginado > 0)
        {
            NoticiasQueryFilter noticiaQF = new NoticiasQueryFilter
            {
                PageNumber = paginado,
                PageSize = 3
            };

            var response = await noticiaServicio.ObtenerNoticiasActivas(noticiaQF);

            lista = (List<NoticiaActivaImagenDto>)response.Data;

        }
        else
        {
             _navServicio.NavigateTo("/Noticias/p/1");
        }

    }

    //protected override async Task OnInitializedAsync()
    //{


    //    if (paginado != 0)
    //    {
    //        //NoticiasQueryFilter noticiaQF = new NoticiasQueryFilter
    //        //    {
    //        //        PageNumber = 1,
    //        //        PageSize = 6

    //        //    };

    //        //var response2 = await noticiaServicio.ObtenerNoticiasActivas(noticiaQF);

    //        //toastService.ShowWarning($"{response2.Resultado} || {response2.Mensaje} || {response2.EsCorrecto}");

    //        var response = await noticiaServicio.ObtenerListadoNoticias(3);
    //            if (response.EsCorrecto)
    //            {
    //                lista = (List<NoticiaDto>)response.Resultado!;
    //            }
    //            else
    //            {
    //                  lista = new List<NoticiaDto>();
    //            }

    //    }
    //}

 protected override async Task OnInitializedAsync()
    {
        
    }
}

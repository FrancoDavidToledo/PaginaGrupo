@page "/Usuarios/panel"

@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Components.Authorization;
@using System.Security.Claims;
@using CurrieTechnologies.Razor.SweetAlert2;

@using PaginaGrupo.WebApp.Extensiones
@using PaginaGrupo.WebApp.Servicios.Contrato;
@using PaginaGrupo.Core.DTOs
@using PaginaGrupo.Core.Entities
@using PaginaGrupo.Core.Enumerations

@inject SweetAlertService Swal;
@inject IUsuarioServicio usuarioServicio
@inject IToastService toastService
@inject NavigationManager _navServicio
@inject AuthenticationStateProvider autencacionProvider;


@*los 2 renglones siguientes son para restringir la pantalla a un rol en especial*@
@using Microsoft.AspNetCore.Authorization;
@attribute [Authorize(Roles = "Administrador")];

<head>
    <meta charset="UTF-8" />

    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Grupo Scout San Patricio</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@300&display=swap" rel="stylesheet">

</head>

<div>
    
    <h1>Gestion de Usuarios</h1>
    <div class="flex-buttons">
        <div class="col-sm-6 col-md-8 col-xl-9 mb-4">

            <div class="input-group mb-3">
         <select class="form-control-sm btn border-black" @bind="buscar" @onclick="(async()=> await ObtenerUsuarios(buscar))">
                    <option value="3">Scout</option>
                    <option value="1">Dirigente</option>
                    <option value="2">Hormiga</option>
                    <option value="0">Administrador</option>
        </select>
        @*<button class="btn btn-outline-secondary" type="button" @onclick="(async()=> await ObtenerUsuarios(buscar))">
            <i class="oi oi-magnifying-glass"></i>
        </button>*@
            </div>
        </div>

        <div class="flex-options">

            <div class="flex-options-details">
                    <button type="button" class="btn btn-warning text-light  no-click">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-fill" viewBox="0 0 16 16">
                            <path d="M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z" />
                        </svg>
                    </button>
                    <span> Editar Usuario</span>

            </div>
        </div>
    </div>

    @if(lista is null){
        <div class="d-flex justify-content-center align-items-center loading mb-5">
            <div class="spinner-border" role="status">
                <span class="sr-only"></span>
            </div>
        </div>
    }
    else
    {
        <table class="table table-striped">
            <thead>
                <tr>
                    <th scope="col">Id</th>
                    <th scope="col">Nombre</th>
                    <th scope="col">Correo Electronico</th>
                    <th scope="col">Rol</th>
                    <th scope="col">Acciones</th>
                </tr>
            </thead>
            <tbody>
         
                @if (lista != null)
                {
                    foreach (var item in lista)
                    {
                        <tr>
                            <td class="col-1">@item.Id</td>
                            <td class="col-4">@item.Nombre</td>
                            <td class="col-4">@item.Correo</td>
                            <td class="col-2">@item.Rol</td>
                            <td><a class="col-2 btn btn-sm btn-warning text-light mt-auto" href="/Usuarios/editar/@item.Id"><i class="oi oi-pencil fs-5"></i</a></td>
                         </tr>
                    }
                }

            </tbody>
        </table>
    }
</div>





@code {
    [CascadingParameter]
    private Task<AuthenticationState> authencationState { get; set; }

    private List<UsuarioDtoSinClave>? lista = null;
    bool respuesta = false;
    string mensaje = string.Empty;
    private int buscar = 3;

 
    private async Task ObtenerUsuarios(int rol)
    {
        var authState = await authencationState;
        var token = Convert.ToString(authState.User.Claims.Where(c => c.Type == ClaimTypes.Authentication).Select(c => c.Value).SingleOrDefault());

        var response = await usuarioServicio.ObtenerListadoUsuarios(rol, token);
        if (response.EsCorrecto)
        {
            lista = (List<UsuarioDtoSinClave>)response.Resultado!;
        }
        else
        {
            lista = new List<UsuarioDtoSinClave>();
        }

    }


    protected override async Task OnInitializedAsync()
    {
        await ObtenerUsuarios(buscar);
    }


}
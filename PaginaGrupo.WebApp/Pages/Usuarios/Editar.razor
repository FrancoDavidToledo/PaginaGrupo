@page "/Usuarios/editar/{Id:int}"

@using Microsoft.AspNetCore.Components.Authorization;
@using System.Security.Claims;

@using PaginaGrupo.WebApp.Extensiones
@using PaginaGrupo.WebApp.Servicios.Contrato;
@using PaginaGrupo.Core.DTOs
@using PaginaGrupo.Core.Entities
@using PaginaGrupo.Core.Enumerations


@inject IUsuarioServicio usuarioServicio
@inject IToastService toastService
@inject NavigationManager _navServicio
@inject AuthenticationStateProvider autencacionProvider;

@*los 2 renglones siguientes son para restringir la pantalla a un rol en especial*@
@using Microsoft.AspNetCore.Authorization;
@attribute [Authorize(Roles = "Administrador")];


<head>
    <meta charset="UTF-8" />

    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Grupo Scout San Patricio</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@300&display=swap" rel="stylesheet">

</head>


<div class="card-header">
    <h3 class="text-center font-weight-light my-4">@Titulo</h3>
</div>
<!------ Include the above in your HEAD tag ---------->
<div>

    


   <EditForm Model="modelo" OnValidSubmit="GuardarCambios">
            <DataAnnotationsValidator></DataAnnotationsValidator>
      <div class="form-group row mt-5">
         <div class="col-sm-10">
             <label for="colFormLabeL">Nombre</label>
                <input type="text" class="form-control form-control-sm" id="colFormLabel" @bind-value="modelo.Nombre">
         </div>
      </div>

      <div class="form-group row mt-3">
         <div class="col-sm-10">
             <!--Aca se cargaria el autor por codigo(usuario conectado)-->
             <label for="colFormLabel">Autor</label>
                <input type="text" class="form-control form-control-sm" id="colFormLabel" @bind-value="modelo.Correo">
         </div>
      </div>


      <h4>Selecciona un rol:</h4>
        <select class="form-control-sm " @bind="buscar">
            <option value="Scout">Scout</option>
            <option value="Dirigente">Dirigente</option>
            <option value="Hormiga">Hormiga</option>
            <option value="Administrador">Administrador</option>
        </select>
@*      <div class="mb-3">
    <InputRadioGroup @bind-Value="@modelo.Rol" class="form-control">
        <div class="form-check form-check-inline">
                <InputRadio class="form-check-input" Value="0" />
                <label class="form-check-label">Administrador</label>
        </div>
        <br />
                <div class="form-check form-check-inline">
                <InputRadio class="form-check-input" Value="1" />
                <label class="form-check-label">Dirigente</label>
        </div>
                <br />
                <div class="form-check form-check-inline">
                <InputRadio class="form-check-input" Value="2" />
                <label class="form-check-label">Hormiga</label>
                </div>
                    <br />
                <div class="form-check form-check-inline">
                    <InputRadio class="form-check-input" Value="3" />
                    <label class="form-check-label">Scout</label>
                </div>


    </InputRadioGroup>
        </div>


        <InputRadioGroup @bind-Value="modelo.Rol">
            Status:
            <br />
            @foreach(var status in (RolType[])Enum.GetValues(typeof(RolType)))
            {
                <InputRadio Value="status"></InputRadio>
                @status
                <br />
            }
        </InputRadioGroup>
*@
@*        <div class="form-group row mt-3">
            <div class="col-sm-10">
                <label for="colFormLabel">Fecha de la noticia</label>
                <br />
                <InputDate class="form-control-sm" @bind-Value="modelo.FechaNoticia"></InputDate>
            </div>
        </div>
*@
           <div class="mt-3 mb-5">
                <button type="submit" class="btn btn-primary" style="width:130px">@boton</button>
                <a href="/Noticias/p/1" class="btn btn-secondary" style="width:130px">Volver</a>
           </div>

   </EditForm>

</div>

@code {
    [Parameter]
    public int Id { get; set; }
    private string Titulo = "Editar Usuario";
    private string boton = "Editar";
    private UsuarioDtoSinClave modelo = new UsuarioDtoSinClave();
    private string buscar;


    [CascadingParameter]
    private Task<AuthenticationState> authencationState { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        var authState = await authencationState;
        if (Id != 0)
        {
            var token = Convert.ToString(authState.User.Claims.Where(c => c.Type == ClaimTypes.Authentication).Select(c => c.Value).SingleOrDefault());
            var response = await usuarioServicio.ObtenerUsuario(Id, token);
            if (response.EsCorrecto!)
            {
                modelo = (UsuarioDtoSinClave)response.Resultado!;
                buscar = response.Resultado.Rol;
            }
            else
                toastService.ShowWarning(response.Mensaje);
        }

    }


    private async Task GuardarCambios()
    {
        var authState = await authencationState;
        var token = Convert.ToString(authState.User.Claims.Where(c => c.Type == ClaimTypes.Authentication).Select(c => c.Value).SingleOrDefault());
        bool respuesta = true;
        string mensaje = string.Empty;
        if (modelo.Nombre == null | modelo.Correo == null)
        {
            respuesta = false;
            mensaje = "Debes completar todos los campos";

        }
        else
        {
            if (Id != 0)
            {
                modelo.Rol = buscar;
                var response = await usuarioServicio.Editar(modelo, token);
                mensaje = response.Mensaje;
                if (!response.EsCorrecto)
                {
                    respuesta = false;
                }
            }
        }
        if (respuesta)
        {
            toastService.ShowSuccess(mensaje);
            _navServicio.NavigateTo("/Usuarios/panel");
        }
        else
            toastService.ShowWarning(mensaje);
    }

}

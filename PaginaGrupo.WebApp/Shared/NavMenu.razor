@implements IDisposable


@inject SweetAlertService Swal;
@inject NavigationManager _navigationManager;
@using PaginaGrupo.WebApp.Extensiones;
@using Microsoft.AspNetCore.Components.Authorization;
@using System.Security.Claims;
@inject AuthenticationStateProvider autencacionProvider;


<nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light">
    <div class="container">
        <a class="navbar-brand text-white" runat="server" href="#">GCSP</a>
        <button type="button" class="navbar-toggler" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" title="Alternar navegación" aria-controls="navbarSupportedContent"
                aria-expanded="false" aria-label="Toggle navigation" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>


        <div class="@NavMenuCssClass navbar-collapse d-sm-inline-flex justify-content-between">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0 ms-lg-4">

                <li class="nav-item" b-test><NavLink class="nav-link text-white" href="/"> Inicio</NavLink></li>
                <li class="nav-item "><NavLink class="nav-link text-white" href="Noticias"> Noticias</NavLink></li>
                <li class="nav-item "><NavLink class="nav-link text-white" href="categorias"> Nosotros</NavLink></li>
                <li class="nav-item "><NavLink class="nav-link text-white" href="productos"> Organización</NavLink></li>

                <li class="nav-item "><NavLink class="nav-link text-white" href="catalogo"> Contacto</NavLink></li>
            </ul>

            <AuthorizeView>
                <Authorized>
                    <span class="navbar-text me-3">
                        @context.User.Claims.Where(c => c.Type == ClaimTypes.Email).Select(c => c.Value).SingleOrDefault()
                    </span>

                </Authorized>
            </AuthorizeView>



            <AuthorizeView>
                <Authorized>

                    <button class="btn btn-outline-light ms-auto ms-md-0 me-3 text-white" type="button" @onclick="CerrarSesion">Salir</button>
                </Authorized>
                <NotAuthorized>
                    <a class="btn btn-outline-light ms-auto ms-md-0 me-3 text-white" href="/login">Iniciar sesion</a>
                </NotAuthorized>
            </AuthorizeView>




        </div>
    </div>
</nav>


@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    public void Dispose()
    {
     
    }


    private async Task CerrarSesion()
    {

        SweetAlertResult result = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "Desea salir?",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true,
                ConfirmButtonText = "Si",
                CancelButtonText = "No",
            });

        if (result.IsConfirmed)
        {
            var autenticacionExt = (AutenticacionExtension)autencacionProvider;
            await autenticacionExt.ActualizarEstadoAutenticacion(null);
            _navigationManager.NavigateTo("/", true);
        }
    }


}
